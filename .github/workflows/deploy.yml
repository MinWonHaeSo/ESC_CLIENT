name: FE React Deploy

on:
  push:
    branches: [main]
  # pull_request:
  #   branches: [main]

permissions:
  contents: read

jobs:
  react:
    name: react build & deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      # Github Repository Secrets를 통해 환경 변수 파일을 생성합니다.
      - name: Generate Environment Variables File
        run: |
          echo "VITE_API_SERVER=$VITE_API_SERVER" >> .env
          echo "VITE_KAKAO_KEY=$VITE_KAKAO_KEY" >> .env
          echo "VITE_FONTAWESOME_KEY=$VITE_FONTAWESOME_KEY" >> .env
          echo "VITE_CLOUDINARY_KEY=$VITE_CLOUDINARY_KEY" >> .env
          echo "VITE_CLOUDINARY_PRESET=$VITE_CLOUDINARY_PRESET" >> .env
          echo "VITE_CLOUDINARY_NAME=$VITE_CLOUDINARY_NAME" >> .env

        env:
          VITE_API_SERVER: ${{ secrets.VITE_API_SERVER }}
          VITE_KAKAO_KEY: ${{ secrets.VITE_KAKAO_KEY }}
          VITE_FONTAWESOM_KEY: ${{ secrets.VITE_FONTAWESOME_KEY }}
          VITE_CLOUDINARY_KEY: ${{ secrets.VITE_CLOUDINARY_KEY }}
          VITE_CLOUDINARY_PRESET: ${{ secrets.VITE_CLOUDINARY_PRESET }}
          VITE_CLOUDINARY_NAME: ${{ secrets.VITE_CLOUDINARY_NAME }}

      # yarn 패키지 설치
      - name: Install Dependencies
        run: yarn install

      # 리액트 빌드
      - name: build react
        run: yarn build

      # aws user 연결
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northeast-2

      # react 빌드한 /dist를 s3로 업로드
      - name: Upload /dist to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME}}
        run: aws s3 sync ./dist s3://$BUCKET_NAME --delete

      # 업로드한 s3 파일을 각 CDN 캐시 무효화하여 리프레시 하기
      - name: CloudFront Invalidation
        env:
          CLOUD_FRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID}}
        run: aws cloudfront create-invalidation --distribution-id $CLOUD_FRONT_ID --paths "/*"
